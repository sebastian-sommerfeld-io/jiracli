---
name: Release + Deploy

on:
  workflow_dispatch:
    inputs:
      version:
        description: The version with which the repo is tagged
        required: true
      publish:
        type: boolean
        description: If true, artifacts are published to e.g. DockerHub
        required: true
        default: false

permissions:
  contents: read

jobs:

  validate-inputs:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Validate version number
        run: echo "${{ github.event.inputs.version }}"
        shell: bash
      - name: Validate publish flag
        run: echo "${{ github.event.inputs.publish }}"
        shell: bash

  generate-app-info:
    runs-on: ubuntu-latest
    needs: ['validate-inputs']
    permissions:
      contents: write
    steps:
      - name: Checkout code
        if: github.event_name != 'pull_request'
        uses: actions/checkout@v3
      - name: Adjust version in antora.yml
        if: github.event_name != 'pull_request'
        uses: sebastian-sommerfeld-io/github-action-generate-app-info@main
        with:
          git_ref: ${{ github.event.inputs.version }}
      - name: Run yamllint for docs/antora.yml
        uses: ibiqlik/action-yamllint@v3
        with:
          file_or_dir: docs/antora.yml
      - name: Generate app-info.yml
        if: github.event_name != 'pull_request'
        run: |
          (
            readonly TARGET_FILE="src/main/app-info.yml"
            readonly REF="${{ github.event.inputs.version }}"

            echo "REF = $REF"

            {
              echo "---"
              echo
              echo "# +---------------------------------------------+"
              echo "# |                                             |"
              echo "# |    DO NOT EDIT DIRECTLY !!!!!               |"
              echo "# |                                             |"
              echo "# |    File is auto-generated by CI pipeline    |"
              echo "# |                                             |"
              echo "# +---------------------------------------------+"
              echo
              echo "version: $REF"
            } > "$TARGET_FILE"

            cat "$TARGET_FILE"

          )
        shell: bash
      - name: Run yamllint for src/main/app-info.yml
        uses: ibiqlik/action-yamllint@v3
        with:
          file_or_dir: src/main/app-info.yml
      - name: Commit and push
        if: github.event_name != 'pull_request'
        uses: EndBug/add-and-commit@v9
        with:
          author_name: sebastian
          author_email: sebastian@sommerfeld.io
          message: "[Actions Bot] auto-generated app-info"

  release-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Todo
        run: echo "Run some automated tests to check if the application is in a releasable state ..."

  dockerhub-deploy:
    runs-on: ubuntu-latest
    needs: ['generate-app-info', 'release-tests']
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Todo
        run: echo "Deploy to DockerHub ..."

  dockerhub-desc:
    runs-on: ubuntu-latest
    needs: ['dockerhub-deploy']
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Todo
        run: echo "Update DockerHub description ..."

  github-release:
    runs-on: ubuntu-latest
    needs: ['dockerhub-deploy']
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Todo
        run: echo "Create a Github Release ..."

  validate-deployment:
    runs-on: ubuntu-latest
    needs: ['dockerhub-deploy']
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Todo
        run: echo "Validate that the latest image is present and usable on DockerHub ..."

  scan-image:
    runs-on: ubuntu-latest
    needs: ['validate-deployment']
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Todo
        run: echo "Scan deployed image (Snyk) ..."

  on-failure:
    runs-on: ubuntu-latest
    needs: ['validate-inputs', 'generate-app-info', 'release-tests', 'github-release', 'dockerhub-deploy', 'dockerhub-desc', 'validate-deployment', 'scan-image']
    if: failure()
    steps:
      - name: Send Pipeline Status to Google Chat
        if: always()
        uses: Co-qn/google-chat-notification@releases/v1
        with:
          name: ${{ github.workflow }}
          url: ${{ secrets.GOOGLE_CHAT_WEBHOOK }}
          status: failure

---
name: CICD

on:
  push:
    branches-ignore:
      - dependabot/**
  pull_request:
    branches-ignore:
      - dependabot/**
  schedule:
    - cron: '0 2 * * 1' # https://crontab.guru

permissions:
  contents: read

jobs:
  lint-yaml:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Run yamllint
        uses: ibiqlik/action-yamllint@v3

  lint-env-files:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Run dotenvlinter in container
        run: docker run -i --rm --volume "$(pwd):/app" --workdir "/app" dotenvlinter/dotenv-linter:latest --exclude "*node_modules*" --recursive

  lint-folders:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Run folderslint in container
        run: docker run -i --rm --volume "$(pwd):$(pwd)" --workdir "$(pwd)" sommerfeldio/folderslint:latest folderslint

  lint-filenames:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Run ls-lint in container
        run: docker run -i --rm --volume "$(pwd):/data" --workdir "/data" lslintorg/ls-lint:1.11.0

  shellcheck:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Run ShellCheck
        uses: ludeeus/action-shellcheck@1.1.0
        with:
          ignore_paths: node_modules target

  sonar:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v1.8
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONARCLOUD_TOKEN }}

  ci:
    runs-on: ubuntu-latest
    needs: ['lint-yaml', 'lint-env-files', 'lint-folders', 'lint-filenames', 'shellcheck', 'sonar']
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Build and run
        run: |
          (
            cd src/main/go || exit
            ./jiracli.sh
          )
        shell: bash

  cd:
    runs-on: ubuntu-latest
    needs: ['ci']
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Todo
        run: echo "todo ..."
        shell: bash

  on-failure:
    runs-on: ubuntu-latest
    needs: ['lint-yaml', 'lint-env-files', 'lint-folders', 'lint-filenames', 'shellcheck', 'sonar', 'ci', 'cd']
    if: failure()
    steps:
      - name: Send Pipeline Status to Google Chat
        if: always()
        uses: Co-qn/google-chat-notification@releases/v1
        with:
          name: ${{ github.workflow }}
          url: ${{ secrets.GOOGLE_CHAT_WEBHOOK }}
          status: failure
